<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style x:Key="PlayButton" TargetType="{x:Type Button}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Border" BorderThickness="0" BorderBrush="#FF47484c">
            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/STARTNORMAL.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/STARTOVER.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/STARTNORMAL.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OptionButton" TargetType="{x:Type Button}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Border" BorderThickness="0" BorderBrush="#FF47484c">
            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/OPTIONNORMAL.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/OPTIONOVER.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/OPTIONNORMAL.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CheckButton" TargetType="{x:Type Button}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Border" BorderThickness="0" BorderBrush="#FF47484c">
            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/CHECKNORMAL.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/CHECKOVER.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/CHECKNORMAL.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CloseButton" TargetType="{x:Type Button}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Border" BorderThickness="0" BorderBrush="#FF47484c">
            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/close_normal.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/close_hover.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/close_normal.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ButtonWeb" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Border" BorderThickness="0" BorderBrush="#FF47484c">
            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/STARTCLICK.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/OPTIONCLICK.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Border.Background">
                <Setter.Value>
                  <ImageBrush ImageSource="/Update;component/Resources/Images/STARTCLICK.png" AlignmentX="Left" AlignmentY="Top" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DownloadProgressBar" TargetType="{x:Type ProgressBar}">
    <Setter Property="Background" Value="{DynamicResource GrayBrush4}" />
    <Setter Property="RangeBase.Maximum" Value="100" />
    <Setter Property="Height" Value="10" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="TextBlock.Text" Value="100" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>
  <ControlTemplate x:Key="dProgressBarTemplate" TargetType="{x:Type ProgressBar}">
    <Grid Name="Root">
      <Border Name="PART_Track" BorderBrush="#FF212224" BorderThickness="0" Margin="0" CornerRadius="3" />
      <Grid Name="ProgressBarRootGrid">
        <Grid Name="DeterminateRoot" Margin="1">
          <Border Name="PART_Indicator" HorizontalAlignment="Left" BorderThickness="1" Width="Auto" Margin="2" CornerRadius="2" MaxWidth="515" BorderBrush="{x:Null}">
            <UIElement.Effect>
              <DropShadowEffect Color="#FFA10F0F" ShadowDepth="0" BlurRadius="50" Opacity="1." />
            </UIElement.Effect>
            <Border.Background>
              <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                <GradientStop Color="#ff78fd00" Offset="0.1" />
                <GradientStop Color="#ff4ea500" Offset="0.5" />
                <GradientStop Color="#ff78fd00" Offset="0.9" />
              </LinearGradientBrush>
            </Border.Background>
          </Border>
        </Grid>
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ProgressBar.Orientation" Value="Vertical">
        <Setter TargetName="Root" Property="FrameworkElement.LayoutTransform">
          <Setter.Value>
            <RotateTransform Angle="-90" />
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="ProgressBar.IsIndeterminate" Value="True">
        <Setter TargetName="DeterminateRoot" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="cProgressBarTemplate" TargetType="{x:Type ProgressBar}">
    <Grid Name="Root">
      <Border Name="PART_Track" BorderBrush="#FF212224" BorderThickness="0" Margin="0" CornerRadius="3" />
      <Grid Name="ProgressBarRootGrid">
        <Grid Name="DeterminateRoot" Margin="1">
          <Border Name="PART_Indicator" HorizontalAlignment="Left" BorderThickness="1" Width="Auto" Margin="2" CornerRadius="2" MaxWidth="515" BorderBrush="{x:Null}">
            <UIElement.Effect>
              <DropShadowEffect Color="#FFA10F0F" ShadowDepth="0" BlurRadius="50" Opacity="1." />
            </UIElement.Effect>
            <Border.Background>
              <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                <GradientStop Color="#ff00cbff" Offset="0.1" />
                <GradientStop Color="#ff0084ff" Offset="0.5" />
                <GradientStop Color="#ff00cbff" Offset="0.9" />
              </LinearGradientBrush>
            </Border.Background>
          </Border>
        </Grid>
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ProgressBar.Orientation" Value="Vertical">
        <Setter TargetName="Root" Property="FrameworkElement.LayoutTransform">
          <Setter.Value>
            <RotateTransform Angle="-90" />
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="ProgressBar.IsIndeterminate" Value="True">
        <Setter TargetName="DeterminateRoot" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>